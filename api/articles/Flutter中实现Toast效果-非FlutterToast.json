{"title":"Flutter中实现Toast效果(非FlutterToast)","uid":"cee112b08e6bf07c6a8b23085ed4d84b","slug":"Flutter中实现Toast效果-非FlutterToast","date":"2018-12-19T07:29:04.000Z","updated":"2021-09-26T12:52:34.182Z","comments":true,"path":"api/articles/Flutter中实现Toast效果-非FlutterToast.json","keywords":null,"cover":"https://www.mobizel.com/wp-content/uploads/2019/09/article_flutter_mobizel@2x.png","content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>本文主要介绍Flutter中利用Overlay相关内容实现Toast效果，主要实现逻辑参考<a href=\"https://www.jianshu.com/u/e90d556ebba2\">简书：平静的阿卿达</a>的<a href=\"https://www.jianshu.com/p/cf7877c9bdeb\">文章：使用Flutter实现Toast效果</a>以及<a href=\"https://github.com/PonnamKarthik/FlutterToast\">FlutterToast</a>的部分写法。</p></blockquote>\n<span id=\"more\"></span>\n\n<h2 id=\"1-实现原理\"><a href=\"#1-实现原理\" class=\"headerlink\" title=\"1.实现原理\"></a>1.实现原理</h2><p> Overlay首先是一个可以浮在整个UI框架上的StatefulWidget，所以其需要借助于OverlayState来更新其状态，利用Overlay.of(context)方 法实例化OverlayState后过OverlayEntry构建在Overlay中的需要展示的 view，并通过OverlayState的insert方法将构建的view更新到Overlay中，同时展示在屏幕上，在不需要的时候可以通过OverlayEntry的remove方法移除当前的展示的view。</p>\n<h3 id=\"OverlayState的使用示例：\"><a href=\"#OverlayState的使用示例：\" class=\"headerlink\" title=\"OverlayState的使用示例：\"></a>OverlayState的使用示例：</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;&#x2F;获取OverlayState\nOverlayState overlayState &#x3D; Overlay.of(context);\n&#x2F;&#x2F;创建OverlayEntry\nOverlayEntry _overlayEntry &#x3D; OverlayEntry(\n    builder: (BuildContext context) &#x3D;&gt; Positioned(\n          child: Icon(Icons.check_circle),\n        ));\n&#x2F;&#x2F;显示到屏幕上。\noverlayState.insert(_overlayEntry);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"2-实现效果\"><a href=\"#2-实现效果\" class=\"headerlink\" title=\"2.实现效果\"></a>2.实现效果</h2><h4 id=\"下图为gif动态图，加载比较慢\"><a href=\"#下图为gif动态图，加载比较慢\" class=\"headerlink\" title=\"下图为gif动态图，加载比较慢\"></a>下图为gif动态图，加载比较慢</h4><center><img src='Flutter中实现Toast效果-非FlutterToast/showToast.gif' width=216 height=384></center>\n\n<h2 id=\"3-封装完成的MyToast代码如下\"><a href=\"#3-封装完成的MyToast代码如下\" class=\"headerlink\" title=\"3.封装完成的MyToast代码如下\"></a>3.封装完成的MyToast代码如下</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">import &#39;package:flutter&#x2F;material.dart&#39;;\nimport &#39;package:flutter&#x2F;widgets.dart&#39;;\n\n\nenum myToastLength &#123; LENGTH_SHORT, LENGTH_LONG &#125;\nenum myToastGravity &#123; TOP, BOTTOM, CENTER &#125;\n\nclass MyToast &#123;\n  String _msg;\n  OverlayEntry _overlayEntry; &#x2F;&#x2F;toast靠它加到屏幕上\n  bool _showing &#x3D; false; &#x2F;&#x2F;toast是否正在showing\n  DateTime _startedTime; &#x2F;&#x2F;开启一个新toast的当前时间，用于对比是否已经展示了足够时间\n  int _length; &#x2F;&#x2F;控制toast显示时间\n  double _position; &#x2F;&#x2F;控制显示位置\n  BuildContext _context;\n  Color _backgroundColor;\n  Color _textColor;\n\n  MyToast(this._context, this._backgroundColor,this._textColor);\n\n  void showToast(&#123;\n    @required String msg,\n    myToastLength toastLength,\n    myToastGravity gravity,\n    &#x2F;&#x2F;int timeInSecForIos &#x3D; 1,\n\n  &#125;) async &#123;\n    assert(msg !&#x3D; null);\n    _msg &#x3D; msg;\n    _startedTime &#x3D; DateTime.now();\n    if(toastLength !&#x3D; null)&#123;\n      toastLength &#x3D;&#x3D; myToastLength.LENGTH_SHORT ? _length &#x3D; 1000 : _length &#x3D; 2000;\n    &#125;else&#123;\n      _length &#x3D; 1000;\n    &#125;\n\n    if(gravity &#x3D;&#x3D; null || gravity &#x3D;&#x3D; myToastGravity.CENTER)&#123;\n      _position &#x3D; 1 &#x2F; 2;\n    &#125;else&#123;\n      gravity &#x3D;&#x3D; myToastGravity.TOP ? _position &#x3D; 1 &#x2F; 10 : _position &#x3D; 9 &#x2F; 10;\n    &#125;\n    &#x2F;&#x2F;获取OverlayState\n    OverlayState overlayState &#x3D; Overlay.of(_context);\n    double _height &#x3D; MediaQuery.of(_context).size.height;\n    print(&#39;当前屏幕高度&#x3D;&#x3D;&gt;&#39;+_height.toString());\n    print(&#39;toast所在高度&#x3D;&#x3D;&gt;&#39;+(_height * _position).toString());\n    _showing &#x3D; true;\n    if (_overlayEntry &#x3D;&#x3D; null) &#123;\n      _overlayEntry &#x3D; OverlayEntry(\n          builder: (BuildContext context) &#x3D;&gt;\n              Positioned(\n                &#x2F;&#x2F;top值，可以改变这个值来改变toast在屏幕中的位置\n                top: _height * _position,\n                child: Container(\n                    alignment: Alignment.center,\n                    width: MediaQuery.of(context).size.width,\n                    child: Padding(\n                      padding: EdgeInsets.symmetric(horizontal: 80.0),\n                      child: AnimatedOpacity(\n                        opacity: _showing ? 1.0 : 0.0, &#x2F;&#x2F;目标透明度\n                        duration: _showing ? Duration(milliseconds: 100) : Duration(milliseconds: 400),\n                        child: _buildToastWidget(_backgroundColor, _textColor),\n                      ),\n                    )),\n              ));\n      overlayState.insert(_overlayEntry);\n    &#125; else &#123;\n      &#x2F;&#x2F;重新绘制UI，类似setState\n      _overlayEntry.markNeedsBuild();\n    &#125;\n    await Future.delayed(Duration(milliseconds: _length)); &#x2F;&#x2F;等待两秒\n\n    &#x2F;&#x2F;2秒后消失\n    if (DateTime.now().difference(_startedTime).inMilliseconds &gt;&#x3D; _length) &#123;\n      _showing &#x3D; false;\n      _overlayEntry.markNeedsBuild();\n    &#125;\n\n    &#x2F;&#x2F;_overlayEntry.remove();\n  &#125;\n\n  &#x2F;&#x2F;toast绘制\n  _buildToastWidget(Color backgroundColor, Color textColor) &#123;\n    return Center(\n      child: Card(\n        color: backgroundColor,\n        child: Padding(\n          padding: EdgeInsets.symmetric(horizontal: 10.0, vertical: 5.0),\n          child: Text(\n            _msg,\n            style: TextStyle(\n              fontSize: 16.0,\n              color: textColor,\n            ),\n          ),\n        ),\n      ),\n    );\n  &#125;\n\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"4-使用示例\"><a href=\"#4-使用示例\" class=\"headerlink\" title=\"4.使用示例\"></a>4.使用示例</h2><p><strong>没使用静态方法的形式，因为可能存在需要在同一界面下一个toast弹出在TOP，一个toast弹出在CENTER，这时候需要实例化两个toast，设置不同的gravity属性。两个Color属性其实可以固定，主要控制Context以及时间和位置</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">void _showToast(String msg) &#123;\n    MyToast myToast &#x3D; new MyToast(context,Colors.lightBlueAccent,Colors.white);\n    myToast.showToast(\n        msg: msg,\n        toastLength: myToastLength.LENGTH_SHORT,\n        gravity: myToastGravity.CENTER\n    );\n  &#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<h2 id=\"5-总结\"><a href=\"#5-总结\" class=\"headerlink\" title=\"5.总结\"></a>5.总结</h2><p><strong>由于个人不太喜欢FlutterToast的效果，也没认真研究，就在网上参考了文初提到的那位作者算是另辟蹊径地实现方式，使用起来个人觉得很舒服，就结合了FlutterToast的使用写法封装了一个MyToast，如有更好的实现方案或者文中代码有问题欢迎在评论区分享和指正。</strong></p>\n","text":" 本文主要介绍Flutter中利用Overlay相关内容实现Toast效果，主要实现逻辑参考简书：平静的阿卿达的文章：使用Flutter实现Toast效果以及FlutterToast的部分写法。 1.实现原理 Overlay首先是一个可以浮在整个UI框架上的StatefulWid...","link":"","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[{"name":"开发","slug":"Code","count":5,"path":"api/categories/Code.json"}],"tags":[{"name":"Flutter","slug":"Flutter","count":1,"path":"api/tags/Flutter.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">1.实现原理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#OverlayState%E7%9A%84%E4%BD%BF%E7%94%A8%E7%A4%BA%E4%BE%8B%EF%BC%9A\"><span class=\"toc-text\">OverlayState的使用示例：</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E5%AE%9E%E7%8E%B0%E6%95%88%E6%9E%9C\"><span class=\"toc-text\">2.实现效果</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%8B%E5%9B%BE%E4%B8%BAgif%E5%8A%A8%E6%80%81%E5%9B%BE%EF%BC%8C%E5%8A%A0%E8%BD%BD%E6%AF%94%E8%BE%83%E6%85%A2\"><span class=\"toc-text\">下图为gif动态图，加载比较慢</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E5%B0%81%E8%A3%85%E5%AE%8C%E6%88%90%E7%9A%84MyToast%E4%BB%A3%E7%A0%81%E5%A6%82%E4%B8%8B\"><span class=\"toc-text\">3.封装完成的MyToast代码如下</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E4%BD%BF%E7%94%A8%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">4.使用示例</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">5.总结</span></a></li></ol>","author":{"name":"CCDawn","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2021/09/dc3ee6fb1b9b2548.jpeg","link":"/","description":"平凡而不简单","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Windows平台下Android开发简要介绍","uid":"e6ed385739a7b6e411921aca285a3298","slug":"Windows平台下Android开发简要介绍","date":"2018-12-20T01:48:52.000Z","updated":"2021-09-29T05:37:15.080Z","comments":true,"path":"api/articles/Windows平台下Android开发简要介绍.json","keywords":null,"cover":"https://taskboot.com/wp-content/uploads/2020/06/android-dev-1.jpg","text":" 本文主要介绍android在Windows下平台开发环境的搭建和遇坑总结部分内容来自网络，如有侵权联系删除。 一、官方文档官方文档有一个大体上的引导作用，很多时候还是需要自己去摸索。开发环境搭建-官方文档 二、准备工作1.JDK JDK版本必须是1.8，安装完jdk记得配置ja...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"开发","slug":"Code","count":5,"path":"api/categories/Code.json"}],"tags":[{"name":"Android","slug":"Android","count":1,"path":"api/tags/Android.json"}],"author":{"name":"CCDawn","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2021/09/dc3ee6fb1b9b2548.jpeg","link":"/","description":"平凡而不简单","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"我在西塘等你","uid":"2f3cf848c9e9f9021dee88c5d9ec4d79","slug":"waiting-for-you","date":"2018-11-24T13:27:15.000Z","updated":"2021-09-28T11:26:23.137Z","comments":true,"path":"api/articles/waiting-for-you.json","keywords":null,"cover":"http://img1.qunarzz.com/travel/d8/1707/27/c55f1cf97d0af7b5.jpg?ver=1","text":" 2015年4月24日，XX，合肥。 2015年4月25日，合肥。 2015年4月26日，苏州。 2015年4月27日，嘉善，西塘。 2015年4月28日，嘉善，苏州。 2015年4月29日，XX。 2015年5月03日，XX。 如梦一般的2015年，原来已经很远很远。 ","link":"","photos":[],"count_time":{"symbolsCount":142,"symbolsTime":"1 mins."},"categories":[{"name":"生活","slug":"Life","count":1,"path":"api/categories/Life.json"}],"tags":[{"name":"西塘","slug":"西塘","count":1,"path":"api/tags/西塘.json"}],"author":{"name":"CCDawn","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2021/09/dc3ee6fb1b9b2548.jpeg","link":"/","description":"平凡而不简单","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}